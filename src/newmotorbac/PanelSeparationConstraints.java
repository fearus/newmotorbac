/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelSeparationConstraints.java
 *
 * Created on May 5, 2011, 5:43:39 PM
 */

package newmotorbac;

import newmotorbac.util.OrbacPolicyContext;
import java.awt.Frame;
import java.util.HashSet;
import java.util.Iterator;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import newmotorbac.dialog.jDialogAddSeparationConstraint;
import orbac.conflict.CSeparationConstraint;
import orbac.exception.COrbacException;

/**
 *
 * @author fabien
 */
public class PanelSeparationConstraints extends javax.swing.JPanel {
    // policy context
    OrbacPolicyContext thisContext;

    /** Creates new form PanelSeparationConstraints */
    public PanelSeparationConstraints(OrbacPolicyContext thisContext) {
        initComponents();

        // store context
        this.thisContext = thisContext;

        // set table state variables to enable row selection
        jTableSeparationConstraints.setCellSelectionEnabled(false);
        jTableSeparationConstraints.setRowSelectionAllowed(true);
        jTableSeparationConstraints.setColumnSelectionAllowed(false);

        // fill table
        UpdateSeparationConstraintTable();
    }

    public void UpdateSeparationConstraintTable()
    {
        try
        {
            // clear table
            DefaultTableModel model = (DefaultTableModel)jTableSeparationConstraints.getModel();
            model.setRowCount(0);
            
            // get constraints
            HashSet<CSeparationConstraint> constraints = thisContext.thePolicy.GetRoleSeparationConstraint();
            Iterator<CSeparationConstraint> ic = constraints.iterator();
            while ( ic.hasNext() )
            {
                CSeparationConstraint sc = ic.next();
                String row[] = new String[5];
                row[0] = "Role separation constraint";
                row[1] = sc.GetFirstEntity();
                row[2] = sc.GetSecondEntity();
                row[3] = sc.GetFirstOrganization();
                row[4] = sc.GetSecondOrganization();
                model.addRow(row);
            }
            constraints = thisContext.thePolicy.GetViewSeparationConstraint();
            ic = constraints.iterator();
            while ( ic.hasNext() )
            {
                CSeparationConstraint sc = ic.next();
                String row[] = new String[5];
                row[0] = "View separation constraint";
                row[1] = sc.GetFirstEntity();
                row[2] = sc.GetSecondEntity();
                row[3] = sc.GetFirstOrganization();
                row[4] = sc.GetSecondOrganization();
                model.addRow(row);
            }
            constraints = thisContext.thePolicy.GetActivitySeparationConstraint();
            ic = constraints.iterator();
            while ( ic.hasNext() )
            {
                CSeparationConstraint sc = ic.next();
                String row[] = new String[5];
                row[0] = "Activity separation constraint";
                row[1] = sc.GetFirstEntity();
                row[2] = sc.GetSecondEntity();
                row[3] = sc.GetFirstOrganization();
                row[4] = sc.GetSecondOrganization();
                model.addRow(row);
            }
            constraints = thisContext.thePolicy.GetContextSeparationConstraint();
            ic = constraints.iterator();
            while ( ic.hasNext() )
            {
                CSeparationConstraint sc = ic.next();
                String row[] = new String[5];
                row[0] = "Context separation constraint";
                row[1] = sc.GetFirstEntity();
                row[2] = sc.GetSecondEntity();
                row[3] = sc.GetFirstOrganization();
                row[4] = sc.GetSecondOrganization();
                model.addRow(row);
            }
        }
        catch (Exception e)
        {
            System.out.println(e);
            e.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonDelete = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSeparationConstraints = new javax.swing.JTable();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(newmotorbac.NewMotorbacApp.class).getContext().getResourceMap(PanelSeparationConstraints.class);
        jButtonDelete.setText(resourceMap.getString("jButtonDelete.text")); // NOI18N
        jButtonDelete.setName("jButtonDelete"); // NOI18N
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonAdd.setText(resourceMap.getString("jButtonAdd.text")); // NOI18N
        jButtonAdd.setName("jButtonAdd"); // NOI18N
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTableSeparationConstraints.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Separation type", "First entity", "Second entity", "First organization", "Second organization"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSeparationConstraints.setColumnSelectionAllowed(true);
        jTableSeparationConstraints.setName("jTableSeparationConstraints"); // NOI18N
        jTableSeparationConstraints.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableSeparationConstraints);
        jTableSeparationConstraints.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableSeparationConstraints.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTableSeparationConstraints.columnModel.title0")); // NOI18N
        jTableSeparationConstraints.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTableSeparationConstraints.columnModel.title1")); // NOI18N
        jTableSeparationConstraints.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTableSeparationConstraints.columnModel.title2")); // NOI18N
        jTableSeparationConstraints.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTableSeparationConstraints.columnModel.title3")); // NOI18N
        jTableSeparationConstraints.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("jTableSeparationConstraints.columnModel.title4")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete)
                .addContainerGap(99, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // open the dialog box
        jDialogAddSeparationConstraint addConstraintDialogBox = new jDialogAddSeparationConstraint(findActiveFrame(), true, thisContext);
        addConstraintDialogBox.setLocationRelativeTo(findActiveFrame());
        NewMotorbacApp.getApplication().show(addConstraintDialogBox);

        if ( addConstraintDialogBox.canceled ) return;

        // add separation constraint
        try
        {
            switch ( addConstraintDialogBox.GetSeparationType() )
            {
                case 0:// role
                    thisContext.thePolicy.AddRoleSeparationConstraint(addConstraintDialogBox.GetFirstEntity(),
                                                                      addConstraintDialogBox.GetSecondEntity(),
                                                                      addConstraintDialogBox.GetFirstOrganization(),
                                                                      addConstraintDialogBox.GetSecondOrganization());
                    break;
                case 1:// activity
                    thisContext.thePolicy.AddActivitySeparationConstraint(addConstraintDialogBox.GetFirstEntity(),
                                                                          addConstraintDialogBox.GetSecondEntity(),
                                                                          addConstraintDialogBox.GetFirstOrganization(),
                                                                          addConstraintDialogBox.GetSecondOrganization());
                    break;
                case 2:// view
                    thisContext.thePolicy.AddViewSeparationConstraint(addConstraintDialogBox.GetFirstEntity(),
                                                                      addConstraintDialogBox.GetSecondEntity(),
                                                                      addConstraintDialogBox.GetFirstOrganization(),
                                                                      addConstraintDialogBox.GetSecondOrganization());
                    break;
                case 3:// context
                    thisContext.thePolicy.AddContextSeparationConstraint(addConstraintDialogBox.GetFirstEntity(),
                                                                         addConstraintDialogBox.GetSecondEntity(),
                                                                         addConstraintDialogBox.GetFirstOrganization(),
                                                                         addConstraintDialogBox.GetSecondOrganization());
                    break;
            }

            // push policy on undo/redo stack
            thisContext.panelPolicy.PushPolicy();
            // refresh display
            UpdateSeparationConstraintTable();
        }
        catch (Exception e)
        {
            System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        try
        {
            DefaultTableModel model = (DefaultTableModel)jTableSeparationConstraints.getModel();
            // get constraint parameters and delete it
            int row = jTableSeparationConstraints.getSelectedRow();
            String e1 = (String)model.getValueAt(row, 1);
            String e2 = (String)model.getValueAt(row, 2);
            String e3 = (String)model.getValueAt(row, 3);
            String e4 = (String)model.getValueAt(row, 4);
            String type = (String)model.getValueAt(row, 0);
            if ( type.equals("Role separation constraint") )
                    thisContext.thePolicy.DeleteRoleSeparationConstraint(e1, e2, e3, e4);
            if ( type.equals("Activity separation constraint") )
                    thisContext.thePolicy.DeleteActivitySeparationConstraint(e1, e2, e3, e4);
            if ( type.equals("View separation constraint") )
                    thisContext.thePolicy.DeleteViewSeparationConstraint(e1, e2, e3, e4);
            if ( type.equals("Context separation constraint") )
                    thisContext.thePolicy.DeleteContextSeparationConstraint(e1, e2, e3, e4);
            if ( type.equals("rule1 above rule2") )
                    thisContext.thePolicy.DeleteRule1AboveRule2(e1, e2, e3, e4);

            // push policy on undo/redo stack
            thisContext.panelPolicy.PushPolicy();
            // refresh display
            UpdateSeparationConstraintTable();
        }
        catch ( COrbacException e )
        {
            System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSeparationConstraints;
    // End of variables declaration//GEN-END:variables
    
    // helper function to find a frame object to display a dialog box for example
    private Frame findActiveFrame()
    {
        Frame[] frames = JFrame.getFrames();
        for (int i = 0; i < frames.length; i++)
        {
            Frame frame = frames[i];
            if (frame.isVisible())
            {
                return frame;
            }
        }
        return null;
    }
}
