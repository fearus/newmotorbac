/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jDialogPlugins.java
 *
 * Created on Jun 10, 2011, 11:28:35 AM
 */

package newmotorbac.dialog;

import java.util.Iterator;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import orbac.AbstractOrbacPolicy;
import orbac.COrbacCore;
import orbac.service.IPolicyProcessorService;
import org.osgi.framework.Bundle;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;

/**
 *
 * @author fabien
 */
public class jDialogPlugins extends javax.swing.JDialog {

    // selected policy on which the plug-in is invoked
    private AbstractOrbacPolicy policy;
    private String pathToPolicy;

    // plug-in list
    private Vector < Bundle > plugins = new Vector < Bundle >();
    private int selectedPluginIndex = -1;
    private IPolicyProcessorService selectedService = null;

    /** Creates new form jDialogPlugins */
    public jDialogPlugins(java.awt.Frame parent, boolean modal, AbstractOrbacPolicy policy, String pathToPolicy) {
        super(parent, modal);
        initComponents();
        
        // set title
        setTitle("Choose an OrBAC plug-in to apply to policy \"" + policy.GetName() + "\"");

        // store policy
        this.policy = policy;
        this.pathToPolicy = pathToPolicy;

        // list plug-ins
        UpdatePlugins();
    }

    private void UpdatePlugins()
    {
        DefaultListModel model = new DefaultListModel();
        jListPlugins.setModel(model);
        plugins = COrbacCore.GetPlugins();
        Iterator < Bundle > ip = plugins.iterator();
        int i = 0;
        while ( ip.hasNext() )
        {
            Bundle b = ip.next();
            model.add(i, b.getSymbolicName());
            i++;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaPluginInformation = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPlugins = new javax.swing.JList();
        jButtonReloadPlugins = new javax.swing.JButton();
        jButtonInvokePlugin = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(591, 287));
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(newmotorbac.NewMotorbacApp.class).getContext().getResourceMap(jDialogPlugins.class);
        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jScrollPane2.border.title"))); // NOI18N
        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextAreaPluginInformation.setColumns(20);
        jTextAreaPluginInformation.setLineWrap(true);
        jTextAreaPluginInformation.setRows(5);
        jTextAreaPluginInformation.setName("jTextAreaPluginInformation"); // NOI18N
        jScrollPane2.setViewportView(jTextAreaPluginInformation);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jListPlugins.setBorder(null);
        jListPlugins.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListPlugins.setName("jListPlugins"); // NOI18N
        jListPlugins.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListPluginsMouseClicked(evt);
            }
        });
        jListPlugins.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListPluginsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListPlugins);

        jButtonReloadPlugins.setIcon(resourceMap.getIcon("jButtonReloadPlugins.icon")); // NOI18N
        jButtonReloadPlugins.setText(resourceMap.getString("jButtonReloadPlugins.text")); // NOI18N
        jButtonReloadPlugins.setName("jButtonReloadPlugins"); // NOI18N
        jButtonReloadPlugins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReloadPluginsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButtonReloadPlugins)
                .addContainerGap(39, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonReloadPlugins)
                .addContainerGap())
        );

        jButtonInvokePlugin.setText(resourceMap.getString("jButtonInvokePlugin.text")); // NOI18N
        jButtonInvokePlugin.setName("jButtonInvokePlugin"); // NOI18N
        jButtonInvokePlugin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvokePluginActionPerformed(evt);
            }
        });

        jButtonClose.setText(resourceMap.getString("jButtonClose.text")); // NOI18N
        jButtonClose.setName("jButtonClose"); // NOI18N
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonInvokePlugin)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonClose))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonInvokePlugin)
                            .addComponent(jButtonClose))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInvokePluginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvokePluginActionPerformed
        if ( selectedService != null )
        {
            // get current policy
            selectedService.ProcessPolicy(policy, pathToPolicy);
        }
        else JOptionPane.showMessageDialog(this, "No plug-in selected");
    }//GEN-LAST:event_jButtonInvokePluginActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jListPluginsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListPluginsValueChanged
        int index = jListPlugins.getSelectedIndex();
        if ( selectedPluginIndex == index ) return;
        selectedPluginIndex = index;

        // retrieve and display infos about the selected plugin
        Bundle selectedPlugin = plugins.elementAt(selectedPluginIndex);
        BundleContext context = selectedPlugin.getBundleContext();
        ServiceReference[] serviceRefs = selectedPlugin.getRegisteredServices();
        for ( int i = 0; i < serviceRefs.length; i++ )
        {
            selectedService = (IPolicyProcessorService) context.getService(serviceRefs[i]);
            jTextAreaPluginInformation.setText(selectedService.AboutPlugin());
        }
    }//GEN-LAST:event_jListPluginsValueChanged

    private void jButtonReloadPluginsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReloadPluginsActionPerformed
        COrbacCore.ReloadPlugins();
        UpdatePlugins();
    }//GEN-LAST:event_jButtonReloadPluginsActionPerformed

    private void jListPluginsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListPluginsMouseClicked
        int index = jListPlugins.locationToIndex(evt.getPoint());
        if ( index == -1 ) return;
        if ( selectedPluginIndex == index ) return;
        selectedPluginIndex = index;

        // retrieve and display infos about the selected plugin
        Bundle selectedPlugin = plugins.elementAt(selectedPluginIndex);
        BundleContext context = selectedPlugin.getBundleContext();
        ServiceReference[] serviceRefs = selectedPlugin.getRegisteredServices();
        for ( int i = 0; i < serviceRefs.length; i++ )
        {
            selectedService = (IPolicyProcessorService) context.getService(serviceRefs[i]);
            jTextAreaPluginInformation.setText(selectedService.AboutPlugin());
        }
    }//GEN-LAST:event_jListPluginsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonInvokePlugin;
    private javax.swing.JButton jButtonReloadPlugins;
    private javax.swing.JList jListPlugins;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaPluginInformation;
    // End of variables declaration//GEN-END:variables

}
