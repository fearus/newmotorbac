/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelAbstractRules.java
 *
 * Created on May 5, 2011, 5:30:22 PM
 */

package newmotorbac;

import newmotorbac.util.OrbacPolicyContext;
import orbac.AbstractOrbacPolicy;

/**
 *
 * @author fabien
 */
public class PanelAbstractRules extends javax.swing.JPanel {
    // policy context
    OrbacPolicyContext thisContext;
    // tabs
    private PanelAbstractRuleList panelPermissions, panelProhibitions, panelObligations;

    /** Creates new form PanelAbstractRules */
    public PanelAbstractRules(OrbacPolicyContext thisContext) {
        initComponents();

        // store context
        this.thisContext = thisContext;

        // create tabs
        panelPermissions = new PanelAbstractRuleList(thisContext, AbstractOrbacPolicy.TYPE_PERMISSION);
        panelProhibitions = new PanelAbstractRuleList(thisContext, AbstractOrbacPolicy.TYPE_PROHIBITION);
        panelObligations = new PanelAbstractRuleList(thisContext, AbstractOrbacPolicy.TYPE_OBLIGATION);
        // add them, depending on policy implementation
        if ( thisContext.thePolicy.IsPermissionImplemented() )
            jTabbedPaneAbstractRules.addTab("Permissions", panelPermissions);
        if ( thisContext.thePolicy.IsProhibitionImplemented() )
            jTabbedPaneAbstractRules.addTab("Prohibitions", panelProhibitions);
        if ( thisContext.thePolicy.IsObligationImplemented() )
            jTabbedPaneAbstractRules.addTab("Obligations", panelObligations);
        // store them in context
        thisContext.panelAbstractRules = this;
        thisContext.panelPermissions = panelPermissions;
        thisContext.panelProhibitions = panelProhibitions;
        thisContext.panelObligations = panelObligations;
        
        // update rules tabs
        UpdateTabs();
    }

    public void UpdateTabs()
    {
        panelPermissions.UpdateRules();
        panelProhibitions.UpdateRules();
        panelObligations.UpdateRules();
    }

    // called when the current organization has changed
    public void SelectedOrganizationHasChanged()
    {
        panelPermissions.SelectedOrganizationHasChanged();
        panelProhibitions.SelectedOrganizationHasChanged();
        panelObligations.SelectedOrganizationHasChanged();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneAbstractRules = new javax.swing.JTabbedPane();

        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(200, 100));

        jTabbedPaneAbstractRules.setName("jTabbedPaneAbstractRules"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneAbstractRules, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneAbstractRules, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPaneAbstractRules;
    // End of variables declaration//GEN-END:variables

}
